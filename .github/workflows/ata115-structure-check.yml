# .github/workflows/ata115-structure-check.yml
name: ATA115 Structure Validation

on:
  push:
    branches:
      - main
    paths:
      - "OPT-IN FRAMEWORK/I-INFRASTRUCTURES/ATA_115-FLIGHT_SIMULATOR_SYSTEMS/**"
  pull_request:
    paths:
      - "OPT-IN FRAMEWORK/I-INFRASTRUCTURES/ATA_115-FLIGHT_SIMULATOR_SYSTEMS/**"

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Verify top-level folder numeration
        run: |
          echo "Verifying top-level folder numeric prefixes..."
          cd "OPT-IN FRAMEWORK/I-INFRASTRUCTURES/ATA_115-FLIGHT_SIMULATOR_SYSTEMS"
          
          # Find all directories (excluding hidden and the parent directory itself)
          found_invalid=false
          for dir in */; do
            # Remove trailing slash
            dirname="${dir%/}"
            
            # Check if directory starts with two digits followed by a hyphen
            if [[ ! "$dirname" =~ ^[0-9]{2}- ]]; then
              echo "❌ Invalid folder name: $dirname (missing or incorrect numeric prefix)"
              found_invalid=true
            else
              echo "✅ Valid folder name: $dirname"
            fi
          done
          
          if [ "$found_invalid" = true ]; then
            echo ""
            echo "❌ ERROR: Some folders are missing or have incorrect numeric prefixes."
            echo "All top-level folders must follow the pattern: NN-NAME"
            exit 1
          else
            echo ""
            echo "✅ Top-level numeration OK - all folders have correct numeric prefixes."
          fi

      - name: Verify required directories exist
        run: |
          echo "Verifying required directory structure..."
          cd "OPT-IN FRAMEWORK/I-INFRASTRUCTURES/ATA_115-FLIGHT_SIMULATOR_SYSTEMS"
          
          required_dirs=(
            "01-QUALIFICATION_AND_CERTIFICATION"
            "02-AIRCRAFT_DATA_PACKAGE_OEM"
            "03-SIMULATOR_SYSTEMS_ARCHITECTURE"
            "04-OPERATIONS_AND_MAINTENANCE"
            "05-DATABASES"
            "06-CONFIGURATION_AND_SOFTWARE"
            "07-REGISTRY_AND_LOGS"
          )
          
          missing_dirs=()
          for dir in "${required_dirs[@]}"; do
            if [ -d "$dir" ]; then
              echo "✅ Found required directory: $dir"
            else
              echo "❌ Missing required directory: $dir"
              missing_dirs+=("$dir")
            fi
          done
          
          if [ ${#missing_dirs[@]} -gt 0 ]; then
            echo ""
            echo "❌ ERROR: Missing required directories:"
            printf '%s\n' "${missing_dirs[@]}"
            exit 1
          else
            echo ""
            echo "✅ All required directories present."
          fi

      - name: Verify required files exist
        run: |
          echo "Verifying required files..."
          cd "OPT-IN FRAMEWORK/I-INFRASTRUCTURES/ATA_115-FLIGHT_SIMULATOR_SYSTEMS"
          
          required_files=(
            "00_README.md"
            "INDEX.meta.yaml"
            "07-REGISTRY_AND_LOGS/status.json"
            "07-REGISTRY_AND_LOGS/defects.csv"
            "07-REGISTRY_AND_LOGS/utilization_log.csv"
          )
          
          missing_files=()
          for file in "${required_files[@]}"; do
            if [ -f "$file" ]; then
              echo "✅ Found required file: $file"
            else
              echo "❌ Missing required file: $file"
              missing_files+=("$file")
            fi
          done
          
          if [ ${#missing_files[@]} -gt 0 ]; then
            echo ""
            echo "❌ ERROR: Missing required files:"
            printf '%s\n' "${missing_files[@]}"
            exit 1
          else
            echo ""
            echo "✅ All required files present."
          fi

      - name: Verify QTG test references to aircraft data
        run: |
          echo "Verifying QTG test cross-references to aircraft data package..."
          cd "OPT-IN FRAMEWORK/I-INFRASTRUCTURES/ATA_115-FLIGHT_SIMULATOR_SYSTEMS"
          
          # Find all QTG test files
          qtg_files=$(find 01-QUALIFICATION_AND_CERTIFICATION/02-QUALIFICATION_TEST_GUIDE_QTG -name "QTG-TEST_*.md" 2>/dev/null || echo "")
          
          if [ -z "$qtg_files" ]; then
            echo "⚠️  Warning: No QTG test files found."
            exit 0
          fi
          
          echo "Found QTG test files:"
          echo "$qtg_files"
          echo ""
          
          missing_refs=()
          for qtg_file in $qtg_files; do
            echo "Checking: $qtg_file"
            
            # Check for "Source Data Reference" or "Aircraft Data Package" mentions
            if grep -q -i "source data reference\|aircraft data package" "$qtg_file"; then
              echo "✅ Contains aircraft data reference"
            else
              echo "❌ Missing aircraft data reference"
              missing_refs+=("$qtg_file")
            fi
          done
          
          if [ ${#missing_refs[@]} -gt 0 ]; then
            echo ""
            echo "❌ WARNING: Some QTG tests lack proper aircraft data references:"
            printf '%s\n' "${missing_refs[@]}"
            echo ""
            echo "All QTG tests must reference the Aircraft Data Package version and source files."
            # Continue on error for now - this is a warning
          else
            echo ""
            echo "✅ All QTG tests contain aircraft data references."
          fi
        continue-on-error: true

      - name: Verify ATA cross-references
        run: |
          echo "Verifying ATA cross-references in documentation..."
          cd "OPT-IN FRAMEWORK/I-INFRASTRUCTURES/ATA_115-FLIGHT_SIMULATOR_SYSTEMS"
          
          # Check README for required ATA cross-references
          if [ -f "00_README.md" ]; then
            echo "Checking 00_README.md for ATA cross-references..."
            
            required_atas=("ATA 42" "ATA 27" "ATA 28" "ATA 26")
            missing_atas=()
            
            for ata in "${required_atas[@]}"; do
              if grep -q "$ata" "00_README.md"; then
                echo "✅ Found reference to $ata"
              else
                echo "❌ Missing reference to $ata"
                missing_atas+=("$ata")
              fi
            done
            
            if [ ${#missing_atas[@]} -gt 0 ]; then
              echo ""
              echo "❌ WARNING: README missing references to critical ATA chapters:"
              printf '%s\n' "${missing_atas[@]}"
              echo ""
              echo "Flight simulator documentation must reference:"
              echo "  - ATA 42: Integrated Modular Avionics (QIS scheduler)"
              echo "  - ATA 27: Flight Control Laws (BWB handling)"
              echo "  - ATA 28/26: Cryogenic H₂ System & safety"
            else
              echo ""
              echo "✅ README contains all required ATA cross-references."
            fi
          fi
        continue-on-error: true

      - name: Verify JSON file syntax
        run: |
          echo "Verifying JSON file syntax..."
          cd "OPT-IN FRAMEWORK/I-INFRASTRUCTURES/ATA_115-FLIGHT_SIMULATOR_SYSTEMS"
          
          json_files=$(find . -name "*.json" 2>/dev/null || echo "")
          
          if [ -z "$json_files" ]; then
            echo "No JSON files found to validate."
            exit 0
          fi
          
          invalid_json=()
          for json_file in $json_files; do
            echo "Checking: $json_file"
            if python3 -m json.tool "$json_file" > /dev/null 2>&1; then
              echo "✅ Valid JSON syntax"
            else
              echo "❌ Invalid JSON syntax"
              invalid_json+=("$json_file")
            fi
          done
          
          if [ ${#invalid_json[@]} -gt 0 ]; then
            echo ""
            echo "❌ ERROR: Invalid JSON syntax in files:"
            printf '%s\n' "${invalid_json[@]}"
            exit 1
          else
            echo ""
            echo "✅ All JSON files have valid syntax."
          fi

      - name: Summary
        run: |
          echo ""
          echo "============================================"
          echo "ATA 115 Structure Validation Complete"
          echo "============================================"
          echo ""
          echo "✅ Directory structure validated"
          echo "✅ Required files present"
          echo "✅ JSON syntax validated"
          echo "⚠️  Review any warnings above for compliance"
          echo ""
          echo "For detailed QTG validation and digital signature"
          echo "verification, additional tools may be required."
